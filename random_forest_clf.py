# -*- coding: utf-8 -*-
"""random_forest_CLF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fuD_a2v3Y4grbcOuMixK3vnujfe3ELWf
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

df=pd.read_csv('social.csv')

df.info()

df.head(5)

# Removing user ID
filterdata=df.iloc[0:,2:]

filterdata.head()

# We need age and salary only
features=filterdata.iloc[0:,0:2]
label=filterdata.iloc[0:,2]

# Dividing the dataset into training and testing .. 
train_data,test_data,train_label,test_label=train_test_split(features,label,test_size=0.2)

"""# Feature SCALING"""

# Now we need feature scaling on age and salary, so that their values must be compatible to each other.. and they do not dominate each other.
from sklearn.preprocessing  import StandardScaler
sc=StandardScaler()
# Applying on Training data
train_data = sc.fit_transform(train_data)

# Testing data scaling
test_data = sc.transform(test_data)   # Since train data is feature scaled.. so we have to do that to this one also.

# Importing RandomForest Classifier
from sklearn.ensemble import RandomForestClassifier

# Random forest call with number of decision Tree
rclf=RandomForestClassifier(n_estimators=20)   # Calling random forest classifier with number of trees we want to make...(n_estimators is number of trees, by default - 10)

# Now Training the data
trained=rclf.fit(train_data,train_label)

# Now predicting
predicted=trained.predict(test_data)

# Getting the Accuracy score.
accuracy_score(predicted,test_label)

