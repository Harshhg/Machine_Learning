# -*- coding: utf-8 -*-
"""knn_classifier_on_IRIS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/Harshhg/Machine_Learning/blob/supervisedML/knn_classifier_on_IRIS.ipynb
"""

# Loading IRIS data set
from sklearn.datasets import load_iris

# Loading into a variable
iris=load_iris()

# Describing IRIS data internally
dir(iris)

# Target Output Values
iris.target_names

# Now attributes of features of given data
iris.feature_names

# data with attributes
iris_features=iris_data.data
iris_label=iris_data.target

# Separating data into Training and Testing
from sklearn.model_selection    import train_test_split
train_data,test_data,train_label,test_label=train_test_split(iris_features,iris_label,test_size=0.2,random_state=0)


# To get help

# help(train_test_split)

# importing KNN classifier
from sklearn.neighbors import KNeighborsClassifier

# Now calling KNN
kclf = KNeighborsClassifier(n_neighbors=5)  # n_neighbors =5 is by default value.  K value must be odd(preferred)

# Training data using KNN
ktrained=kclf.fit(train_data,train_label)

# Predicting the data
kpredicted=ktrained.predict(test_data)

# KNN predicted output
kpredicted

# Acutal output
test_label

# Finding Accuracy Score
from sklearn.metrics import accuracy_score         
accuracy_score(test_label,kpredicted)

# calling Decision Tree CLassifier for same data set
from sklearn.tree import DecisionTreeClassifier
dclf=DecisionTreeClassifier()

dtrained=dclf.fit(train_data,train_label)

dpredicted=dtrained.predict(test_data)

dpredicted

test_label

accuracy_score(test_label,dpredicted)



