# -*- coding: utf-8 -*-
"""Comparing DTC & KNN on iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v2D6x97_2dV8CQVQpFlqV50e_4V5Mu6E
"""

# Loading IRIS data set
from sklearn.datasets import load_iris
import matplotlib.pyplot as plt
from sklearn.metrics import accuracy_score   
from sklearn.tree import DecisionTreeClassifier

# Loading into a variable
iris=load_iris()

# Describing IRIS data internally
dir(iris)

# Target Output Values
iris.target_names

# Now attributes of features of given data
iris.feature_names

# data with attributes
iris_features=iris.data
iris_label=iris.target

# Separating data into Training and Testing
from sklearn.model_selection    import train_test_split
train_data,test_data,train_label,test_label=train_test_split(iris_features,iris_label,test_size=0.2,random_state=0)


# To get help

# help(train_test_split)

# importing KNN classifier
from sklearn.neighbors import KNeighborsClassifier

# Now calling KNN
x=[1,4,7]
y=[2,5,8]
kacs=[]
dacs=[]
for i in [3,5,7]:
  kclf = KNeighborsClassifier(n_neighbors=i)  # n_neighbors =5 is by default value.  K value must be odd(preferred)
  ktrained=kclf.fit(train_data,train_label)
  kpredicted=ktrained.predict(test_data)
  kacs.append(accuracy_score(kpredicted,test_label))
  
  # Decision Tree Classifier on the same
  
  dclf=DecisionTreeClassifier()
  dtrained=dclf.fit(train_data,train_label)
  dpredicted=dtrained.predict(test_data)
  dacs.append(accuracy_score(test_label,dpredicted))

print(kacs)  
print(dacs)

plt.grid()
plt.bar(x,kacs)
plt.bar(y,dacs)

